{"version":3,"sources":["constants/index.js","utils/index.js","Context/PokemonContext.js","Context/MyPokemonContext.js","components/Navbar.js","components/ResponsiveImg.js","assets/styling/breakpoints.js","components/PokemonCard.js","constants/style.js","components/Button.js","pages/PokemonList.js","components/List.js","components/ChipType.js","components/TypeList.js","components/ModalCatchPokemon.js","assets/images/pokeball.svg","components/Loading.js","components/StatusBar.js","pages/PokemonDetail.js","pages/MyPokemon.js","pages/router.js","App.js","reportWebVitals.js","index.js"],"names":["TYPES","name","color","fetchData","endpoint","a","fetch","data","lightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","PokemonContext","createContext","PokemonProvider","props","useState","pokemons","setPokemons","loadMore","setLoadMore","useEffect","getData","useCallback","response","json","next","substring","length","results","map","pokemon","res","pokemonData","oldList","providerValue","Provider","value","children","MyPokemonContext","MyPokemonProvider","JSON","parse","localStorage","getItem","NavWrapper","styled","div","NavMenu","Navbar","className","to","ResponsiveImg","src","Image","img","breakpoints","s","m","l","xl","mq","n","Object","keys","key","reduce","acc","size","shadowHover","keyframes","PokemonCardDiv","PokemonCard","countOwned","sprites","other","dream_world","front_default","alt","nickname","Button","width","bgColor","callbackFunc","StyledButton","button","onClick","ContentWrapper","PokemonList","useContext","capturedPokemon","index","filter","ListWrapper","ListRow","List","property","singleData","Chip","setBgColor","typeName","matchedType","find","type","ChipType","css","FlexList","TypeList","types","Wrapper","Overlay","Modal","Input","input","ModalCatchPokemon","closeModal","isCaptured","saveCatchedPokemon","capturedPokemons","setNickname","inputErrorMsg","setInputErrorMsg","FailedToCatch","onSubmit","event","preventDefault","toLowerCase","handleSubmit","onChange","target","RotateInfinite","ImageWrapper","PokeballImage","ContextWrapper","StatusBar","statName","points","PokemonDetailWrapper","PokemonDetail","match","setPokemon","setCapturedPokemons","setIsCaptured","moves","setMoves","abilities","setAbilities","myPokemonByName","setMyPokemonByName","modalIsActive","setModalIsActive","isLoading","setIsLoading","getDetail","captPokemon","params","pokemonName","e","move","ability","weight","height","base_experience","centered","setTimeout","Math","random","stats","stat","base_stat","Loading","prevList","tempNewArray","setItem","stringify","MyPokemon","indexOf","splice","releasePokemon","router","path","exact","component","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8492a3fb.chunk.js","sourcesContent":["export const API_URL = \"https://pokeapi.co/api/v2/\"\n\nexport const TYPES = [\n    { name: \"normal\", color: \"#A8A878\", },\n    { name: \"fire\", color: \"#F08030\", },\n    { name: \"water\", color: \"#6890F0\", },\n    { name: \"grass\", color: \"#78C850\", },\n    { name: \"electric\", color: \"#F8D030\", },\n    { name: \"ice\", color: \"#98D8D8\", },\n    { name: \"fighting\", color: \"#C03028\", },\n    { name: \"poison\", color: \"#A040A0\", },\n    { name: \"ground\", color: \"#E0C068\", },\n    { name: \"flying\", color: \"#A890F0\", },\n    { name: \"psychic\", color: \"#F85888\", },\n    { name: \"bug\", color: \"#A8B820\", },\n    { name: \"rock\", color: \"#B8A038\", },\n    { name: \"ghost\", color: \"#705898\", },\n    { name: \"dark\", color: \"#705848\", },\n    { name: \"dragon\", color: \"#7038F8\", },\n    { name: \"steel\", color: \"#B8B8D0\", },\n    { name: \"fairy\", color: \"#F0B6BC\", },\n]","import { API_URL } from '../constants'\n\nexport const fetchData = async (endpoint) => {\n  try {\n    const data = await fetch(`${API_URL}${endpoint}`)\n\n    return data\n  } catch (e) {\n    return e\n  }\n}\n\nexport const gilterMyPokemonBySpeciesName = (name, PokemonList) => {\n  return PokemonList.filter(pokemon => pokemon.name.toLowerCase() === name.toLowerCase())\n}\n\nexport const lightenDarkenColor = (col, amt) => {\n  var usePound = false;\n\n  if (col[0] === \"#\") {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(col,16);\n\n  var r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;\n  else if  (r < 0) r = 0;\n\n  var b = ((num >> 8) & 0x00FF) + amt;\n\n  if (b > 255) b = 255;\n  else if  (b < 0) b = 0;\n\n  var g = (num & 0x0000FF) + amt;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}","import React, { useState, useEffect, useCallback, createContext } from 'react';\nimport { fetchData } from '../utils'\n\nexport const PokemonContext = createContext();\n\nexport const PokemonProvider = (props) => {\n  const [pokemons, setPokemons] = useState([]);\n\n  const [loadMore, setLoadMore] = useState(`pokemon?limit=15`)\n\n  useEffect( () => {\n    getData();\n  }, [])\n  \n  const getData = useCallback(\n    async () => {\n      const response = await fetchData(loadMore);\n      const data = await response.json()\n\n      setLoadMore(data.next.substring(26, data.next.length-1))\n\n      data.results.map(async pokemon => {\n        const res = await fetchData(`pokemon/${pokemon.name}`)\n        const pokemonData = await res.json()\n\n        // Push pokemon to the existing\n        setPokemons(oldList => [...oldList, pokemonData])\n      })\n    }\n  )\n\n  const providerValue = [\n    pokemons,\n    setPokemons,\n    getData,\n  ];\n\n  return (\n    <PokemonContext.Provider value={providerValue}>\n      {props.children}\n    </PokemonContext.Provider>\n  )\n};","import React, { createContext, useState } from 'react'\n\nexport const MyPokemonContext = createContext();\n\nexport const MyPokemonProvider = (props) => {\n  const [capturedPokemons, setCapturedPokemons] = useState(JSON.parse(localStorage.getItem('capturedPokemons') || '[]'));\n\n  const providerValue = [\n    capturedPokemons,\n    setCapturedPokemons,\n  ];\n\n  return (\n    <MyPokemonContext.Provider value={providerValue}>\n      {props.children}\n    </MyPokemonContext.Provider>\n  )\n}","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'react-router-dom'\n\nconst NavWrapper = styled.div`\n  nav {\n    background-color: #292929;\n    height: 50px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 5px 0;\n    position: fixed;\n    z-index: 2;\n  }\n`\nconst NavMenu = styled.div`\n  color: #f5f5f5;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  &:hover {\n    background-color: #15171c;\n  }\n`\n\nexport const Navbar = () => {\n  return (\n    <NavWrapper>\n      <nav>\n        <Link className=\"link-no-decoration\" to=\"/\">\n          <NavMenu>\n            PokeList\n          </NavMenu>\n        </Link>\n        <Link className=\"link-no-decoration\" to=\"/my-pokemon\">\n          <NavMenu>\n            My Pokemon\n          </NavMenu>\n        </Link>\n      </nav>\n    </NavWrapper>\n  )\n}\n\nexport default Navbar","import React from 'react'\nimport styled from'@emotion/styled'\n\nconst ResponsiveImg = ({ src }) => {\n  const Image = styled.img`\n    width: 100%;\n    height: inherit;\n    object-fit: contain;\n    object-position: bottom;\n    margin: 0 auto;\n  `\n\n  return (\n    <Image src={src} />\n  )\n}\n\nexport default ResponsiveImg","const breakpoints = {\n  s: 576,\n  m: 768,\n  l: 992,\n  xl: 1200,\n}\n\nexport const mq = n => {\n  const bpArray = Object.keys(breakpoints).map(key => [key, breakpoints[key]]);\n\n  const [result] = bpArray.reduce((acc, [name, size]) => {\n    if (n === name) return [...acc, `@media (min-width: ${size}px)`];\n    return acc;\n  }, []);\n\n  return result;\n};","import React from 'react'\nimport styled from '@emotion/styled'\nimport { keyframes } from '@emotion/react'\nimport ResponsiveImg from './ResponsiveImg'\nimport { mq } from '../assets/styling/breakpoints'\n\nconst shadowHover = keyframes`\n  from {\n    box-shadow: none;\n  }\n  to {\n    transform: translate(0, -10px);\n    box-shadow: 0 10px 10px #00000050;\n  }\n`\nconst PokemonCardDiv = styled.div`\n  background-color: #ffffff99;\n  display: flex;\n  padding: 16px;\n  margin: 10px 0;\n  border-radius: 10px;\n  &:hover {\n    box-shadow: 0 10px 10px #00000050;\n  }\n\n  .card-image {\n    height: 100px;\n    width: 100px;\n    margin-right: 16px;\n  }\n\n  .card-info {\n    flex-grow: 1;\n  }\n\n  .nickname, .name {\n    margin-bottom: 0.5rem;\n  }\n\n  ${mq('s')} {\n    display: block;\n    &:hover {\n      animation: ${shadowHover} 0.1s ease forwards;\n    }\n\n    .card-image {\n      height: 150px;\n      width: 150px;\n      margin: 16px auto;\n      padding: 24px;\n    }\n    .card-info {\n      text-align: center;\n    }\n  }\n`\n\nexport const PokemonCard = ({ pokemon, countOwned, children }) => {\n  return (\n    <>\n      <PokemonCardDiv>\n        <div className=\"card-image display-flex-centered\">\n          <ResponsiveImg\n            src={pokemon.sprites.other.dream_world.front_default}\n            alt={pokemon.name}\n          />\n        </div>\n\n        <div className=\"card-info\">\n          { pokemon.nickname &&\n              <h2 className=\"nickname capitalize\">\n                {pokemon.nickname}\n              </h2>\n          }\n\n          <h3 className=\"name capitalize\">{pokemon.name}</h3>\n          \n          {\n            countOwned != null &&\n              <p className=\"text-owned\">\n                owned: {countOwned}\n              </p>\n          }\n        </div>\n\n        <div>\n          { children }\n        </div>\n      </PokemonCardDiv>\n    </>\n  )\n}\n\nexport default PokemonCard","export const color = {\n    white: '#fff',\n    black: '#292929',\n    red: '#CC0000',\n    blue: '#3B4CCA',\n    grey: '#f5f5f5',\n}","import React from 'react'\nimport styled from '@emotion/styled'\nimport { color } from '../constants/style'\nimport { lightenDarkenColor } from '../utils'\n\nconst Button = ({\n  width=\"auto\",\n  bgColor=color.grey,\n  children,\n  callbackFunc=()=> {return}\n}) => {\n  const StyledButton = styled.button`\n    background-color: ${bgColor};\n    padding: 0.5rem 2rem;\n    border: none;\n    border-radius: 50px;\n    width: ${width};\n    &:hover {\n      background-color: ${lightenDarkenColor(bgColor, -20)};\n    }\n  `\n\n  return (\n    <StyledButton onClick={() => callbackFunc()} >\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default Button","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled'\n\nimport { PokemonContext } from '../Context/PokemonContext';\nimport { MyPokemonContext } from '../Context/MyPokemonContext';\n\nimport PokemonCard from '../components/PokemonCard'\nimport Button from '../components/Button';\nimport { color } from '../constants/style';\nimport { mq } from '../assets/styling/breakpoints'\n\nconst ContentWrapper = styled.div`\n  .list-wrapper {\n    margin: 0 16px;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  .pokemon-card {\n    display: flex;\n  }\n\n  ${mq('s')} {\n    .list-wrapper {\n      margin: 0 auto;\n      flex-flow: row wrap;\n      justify-content: space-evenly;\n    }\n  }\n`\n\nconst PokemonList = () => {\n  const [pokemons, loadMore, getData] = useContext(PokemonContext);\n  const [capturedPokemon] = useContext(MyPokemonContext);\n  \n  const countPokemonOwned = name => {\n    const tempPokemon = capturedPokemon.filter(pokemon => pokemon.name === name)\n    \n    return tempPokemon.length\n  }\n  \n  return (\n    <ContentWrapper>\n      <h1 className=\"text-centered\">Pokemons List</h1>\n\n      <div className=\"list-wrapper\">\n        {pokemons.map((pokemon, index) =>\n          <div key={index}>\n            <Link className=\"link-no-decoration\" to={`details/${pokemon.name}`}>\n              <PokemonCard\n                pokemon={pokemon}\n                countOwned={countPokemonOwned(pokemon.name)}\n              >\n              </PokemonCard>\n            </Link>\n          </div>\n        )}\n      </div>\n\n      {\n        // If loadMore is null, it means the \"next\" is null.\n        // Which means that all Pokemons has been loaded\n        // So the button shouldn't be showed anymore\n        loadMore &&\n          <div className=\"display-flex-centered\">\n            <Button\n              bgColor={color.blue}\n              callbackFunc={() => getData()}\n            >\n              <h2 className=\"mx-0 my-0 text-white\">Load more</h2>\n            </Button>\n          </div>\n      }\n      \n    </ContentWrapper>\n  )\n}\n\nexport default PokemonList;","import React from 'react'\nimport styled from '@emotion/styled'\nimport { color } from '../constants/style'\n\nconst ListWrapper = styled.div`\n  max-height: 300px;\n  overflow-y: scroll;\n`\nconst ListRow = styled.div`\n  background-color: ${color.white};\n  width: auto;\n  padding: 10px;\n  border-bottom: 2px solid ${color.grey};\n  &:hover {\n    background-color: ${color.grey};\n  }\n`\n\nexport const List = ({ data, property }) => {\n  return (\n    <ListWrapper>\n      <div>\n        {data && data.map((singleData, index) =>\n          <ListRow key={index}>\n            <p className=\"my-0 capitalize\">\n              {index+1}. { singleData[`${property}`] }\n            </p>\n          </ListRow>\n        )}\n      </div>\n    </ListWrapper>\n  )\n}\n\nexport default List","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/css'\n\nimport { TYPES } from '../constants'\n\nconst Chip = styled.div`\n    border-radius: 100px;\n    width: auto;\n    color: #f5f5f5;\n    padding: 5px 10px;\n    margin-right: 8px;\n  `\nconst setBgColor = (typeName) => {\n  const matchedType = TYPES.find(type => type.name === typeName)\n\n  return `background-color: ${matchedType ? matchedType.color : '#d5d5d5'}`\n}\n  \nexport const ChipType = (props) => {\n  return (\n    <Chip className={css`${setBgColor(props.name)}`}>\n      <span className=\"text-white\">\n        { props.name }\n      </span>\n    </Chip>\n  )\n}\n\nexport default ChipType","import React from 'react'\nimport styled from '@emotion/styled'\nimport ChipType from './ChipType'\n\n\nconst FlexList = styled.div`\n    display: flex;\n  `\n\nconst TypeList = (props) => {\n  return (\n    <FlexList>\n      {props.types && props.types.map((type, index) =>\n        <ChipType\n          key={index}\n          name={type.type.name}>\n        </ChipType>\n      )}\n    </FlexList>\n  )\n}\n\nexport default TypeList","import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\nimport Button from './Button'\nimport { color } from '../constants/style'\nimport { css } from '@emotion/css'\nimport { lightenDarkenColor } from '../utils'\nimport { mq } from '../assets/styling/breakpoints'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  left: 0;\n  top: 0;\n`\nconst Overlay = styled.div`\n  background-color: #00000099;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n`\nconst Modal = styled.div`\n  width: 100%;\n  height: 80vh;\n  border-radius: 10px 10px 0 0;\n  background-color: #fff;\n  display: flex;\n  align-self: flex-end;\n  justify-content: center;\n  align-items: center;\n\n  ${mq('s')} {\n    align-self: center;\n    height: auto;\n    border-radius: 10px;\n    width: 50%;\n    height: 50vh;\n    padding: 32px 24px;\n  }\n`\nconst Input = styled.input`\n  height: 32px;\n  padding: 2px 6px;\n  text-align: center;\n  background-color: ${color.grey};\n  border: 2px solid ${lightenDarkenColor(color.grey, -20)};\n  font-size: 16px;\n`\n\nconst ModalCatchPokemon = ({closeModal, isCaptured, pokemon, saveCatchedPokemon, capturedPokemons}) => {\n  const [nickname, setNickname] = useState('')\n  const [inputErrorMsg, setInputErrorMsg] = useState(null)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if(nickname == '') {\n      setInputErrorMsg('Nickname should not be empty')\n      return\n    }\n    if(capturedPokemons.find(pokemon => pokemon.nickname.toLowerCase() === nickname.toLowerCase())) {\n      setInputErrorMsg('Nickname has been taken')\n      return\n    }\n    \n    saveCatchedPokemon(nickname)\n  }\n\n  useEffect(() => setInputErrorMsg(null), [nickname])\n  \n  const FailedToCatch = () => {\n    return (\n      <div className=\"text-centered\">\n        <h2>Failed to catch</h2>\n        <p>Maybe try again?</p>\n\n        <Button callbackFunc={() => closeModal(false)}>Close</Button>\n      </div>    \n    )\n  }\n  \n  return (\n    <Wrapper>\n      <Overlay className=\"overlay display-flex-centered\">\n        <Modal>\n          {\n            isCaptured && \n            <div className=\"text-centered\">\n              <h2 className=\"capitalize\">You catched {pokemon.name}!</h2>\n              <p>Give it a catchy nickname</p>\n              <form onSubmit={(event) => handleSubmit(event)}>\n                <div className={css`margin-bottom: 1rem`}>\n                  <Input\n                    name=\"nickname\"\n                    type=\"text\"\n                    value={nickname}\n                    onChange={(event) => setNickname(event.target.value)}\n                  ></Input>\n                  {\n                    inputErrorMsg &&\n                      <div>\n                        <small className=\"text-error\">{ inputErrorMsg }</small>\n                      </div>\n                  }\n                </div>\n        \n                <div>\n                  <Button bgColor={color.blue} type=\"submit\">\n                    <h4 className=\"text-white mx-0 my-0\">\n                      Save\n                    </h4>\n                  </Button>\n                </div>\n              </form>\n            </div>\n          }\n          {\n            !isCaptured && <FailedToCatch />\n          }\n        </Modal>\n      </Overlay>\n    </Wrapper>\n  )\n}\n\nexport default ModalCatchPokemon","export default __webpack_public_path__ + \"static/media/pokeball.3b2396ac.svg\";","import React from 'react'\nimport styled from '@emotion/styled'\nimport ResponsiveImg from './ResponsiveImg'\nimport PokeballImage from '../assets/images/pokeball.svg'\nimport { keyframes } from '@emotion/react'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  left: 0;\n  top: 0;\n`\nconst Overlay = styled.div`\n  background-color: #00000099;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n`\nconst RotateInfinite = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\nconst ImageWrapper = styled.div`\n  background-color: #fff;\n  width: 50px;\n  height: 50px;\n  border: 10px solid #fff;\n  border-radius: 50%;\n  animation: ${RotateInfinite} 2s linear infinite;\n`\n\nconst ModalCatchPokemon = () => {\n  return (\n    <Wrapper>\n      <Overlay className=\"overlay display-flex-centered\">\n        <ImageWrapper>\n          <ResponsiveImg src={PokeballImage} />\n        </ImageWrapper>\n      </Overlay>\n    </Wrapper>\n  )\n}\n\nexport default ModalCatchPokemon","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/css'\n\nconst ContextWrapper = styled.div`\n  margin: 16px auto;\n\n  label {\n    display: flex;\n    justify-content: space-between;\n  }\n  .meter { \n    height: 10px;  <em>/* Can be anything */</em>\n    position: relative;\n    background: #555;\n    border-radius: 25px;\n    padding: 8px;\n    box-shadow: inset 0 -1px 1px rgba(255, 255, 255, 0.3);\n}\n  .meter > span {\n    display: block;\n    height: 100%;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n    border-top-left-radius: 20px;\n    border-bottom-left-radius: 20px;\n    background-color: rgb(43,194,83);\n    background-image: linear-gradient(\n      center bottom,\n      rgb(43,194,83) 37%,\n      rgb(84,240,84) 69%\n    );\n    box-shadow: \n      inset 0 2px 5px  rgba(255,255,255,0.3),\n      inset 0 -2px 6px rgba(0,0,0,0.4);\n    position: relative;\n    overflow: hidden;\n  }\n`\n\nconst StatusBar = ({ statName, points }) => {\n  return (\n    <>\n      <ContextWrapper>\n        <label>\n          <span className=\"capitalize\">{statName}</span>\n          <span>{points}</span>\n        </label>\n        \n        <div className=\"meter\">\n          <span className={css`width: ${points}%`}></span>\n        </div>\n      </ContextWrapper>\n    </>\n  )\n}\n\nexport default StatusBar","import React, { useState, useEffect, useContext } from 'react';\nimport { MyPokemonContext } from '../Context/MyPokemonContext';\nimport { fetchData } from '../utils'\nimport styled from '@emotion/styled'\n\nimport List from '../components/List'\nimport TypeList from '../components/TypeList'\nimport ModalCatchPokemon from '../components/ModalCatchPokemon';\nimport Loading from '../components/Loading';\nimport Button from '../components/Button';\nimport ResponsiveImg from '../components/ResponsiveImg';\nimport StatusBar from '../components/StatusBar';\n\nimport { mq } from '../assets/styling/breakpoints'\nimport { color } from '../constants/style';\n\n\n\nconst PokemonDetailWrapper = styled.div`\n  .content-wrap {\n    padding: 0 16px;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: center;\n  }\n  .content-left, .content-right {\n    width: 100%;\n  }\n  \n  .image-wrapper {\n    max-width: 200px;\n    max-height:200px;\n    margin-bottom: 3rem;\n  }\n\n  .more-info {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  ${mq('s')} {\n    .content-wrap {\n      flex-flow: row nowrap;\n      justify-content: space-between;\n    }\n    .content-left {\n      width: 30%;\n    }\n    .content-right {\n      width: 68%;\n    }\n  }\n`\nconst Wrapper = styled.div`\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px;\n  margin-bottom: 24px;\n`\n\nconst PokemonDetail = ({ match }) => {\n  const [pokemon, setPokemon] = useState({});\n  const [capturedPokemons, setCapturedPokemons] = useContext(MyPokemonContext)\n  const [isCaptured, setIsCaptured] = useState(false)\n  const [moves, setMoves] = useState([])\n  const [abilities, setAbilities] = useState([])\n  const [myPokemonByName, setMyPokemonByName] = useState([])\n  \n  const [modalIsActive, setModalIsActive] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    getDetail();\n    setMyPokemonByName(() => capturedPokemons.filter(captPokemon => captPokemon.name === match.params.pokemonName))\n  }, [])\n  \n  const getDetail = async () => {\n    const response = await fetchData(`pokemon/${match.params.pokemonName}`);\n    const json = await response.json()\n    setPokemon(json)\n    setMoves(() => {return json.moves.map(e => e.move)})\n    setAbilities(() => {return json.abilities.map(e => e.ability)})\n  }\n\n  const catchPokemon = (pokemon) => {\n    setIsLoading(true)\n\n    setTimeout(() => setIsLoading(false), 1000)\n    setTimeout(() => setModalIsActive(true), 1000)\n    // Random boolean with 50% success percentage\n    setIsCaptured(Math.random() >= 0.5)\n  }\n\n  const saveCatchedPokemon = (nickname) => {\n    setModalIsActive(false)\n\n    setCapturedPokemons(prevList => {\n      const tempNewArray = [...prevList, {...pokemon, nickname: nickname}]\n      localStorage.setItem('capturedPokemons', JSON.stringify(tempNewArray))\n\n      return tempNewArray\n    })\n  }\n  \n  return (\n    <PokemonDetailWrapper className=\"pokemons-list\">\n      <h1 className=\"text-centered\">Pokemon Details</h1>\n\n      <div className=\"content-wrap\">\n        <div className=\"content-left\">\n          <Wrapper>\n            <div className=\"image-wrapper mx-auto\">\n              <ResponsiveImg\n                src={pokemon.sprites && pokemon.sprites.other.dream_world.front_default}\n                alt={pokemon.name}\n              />\n            </div>\n\n            <div>\n              <h2 className=\"capitalize text-centered\">{pokemon.name}</h2>\n            </div>\n            \n            <div>\n              <div className=\"more-info\">\n                <h4>Weight</h4>\n                <p>{pokemon.weight} kg</p>\n              </div>\n              <div className=\"more-info\">\n                <h4>Height</h4>\n                <p>{pokemon.height/10} m</p>\n              </div>\n              <div className=\"more-info\">\n                <h4>Base XP</h4>\n                <p>{pokemon.base_experience}</p>\n              </div>\n            </div>\n\n            <TypeList types={pokemon.types}></TypeList>\n            <div className=\"my\">\n              <Button\n                centered={true}\n                width={`100%`}\n                bgColor={color.blue}\n                callbackFunc={ () => catchPokemon(pokemon)}\n              >\n                <h2 className=\"mx-0 my-0 text-white\">Catch</h2>\n              </Button>\n            </div>\n          </Wrapper>\n\n          <Wrapper>\n            <h2 className=\"capitalize\">My {pokemon.name} ({myPokemonByName.length})</h2>\n\n            {\n              myPokemonByName.length > 0 ? (\n                <List\n                  data={myPokemonByName}\n                  property=\"nickname\"\n                />\n              ) : (\n                <div>\n                  <p>\n                    No {pokemon.name} captured yet\n                  </p>\n                </div>\n              )\n            }\n          </Wrapper>\n        </div>\n\n        <div className=\"content-right\">\n          <Wrapper>\n            <h2>Abilities</h2>\n            <List\n              data={abilities}\n              property=\"name\"\n            />\n          </Wrapper>\n\n          <Wrapper>\n            <h2>Stats</h2>\n            \n            {\n              pokemon.stats && pokemon.stats.map((stat, index) =>\n                <StatusBar key={index} statName={stat.stat.name} points={stat.base_stat} />\n              )\n            }\n          </Wrapper>\n\n          <Wrapper>\n            <h2>Moves</h2>\n            <List\n              data={moves}\n              property=\"name\"\n            />\n          </Wrapper>\n        </div>\n      </div>\n\n      { isLoading && <Loading /> }\n\n      {\n        modalIsActive &&\n          <ModalCatchPokemon\n            closeModal={() => {\n              setModalIsActive(false)\n            }}\n            saveCatchedPokemon={event => saveCatchedPokemon(event)}\n            isCaptured={isCaptured}\n            pokemon={pokemon}\n            capturedPokemons={capturedPokemons}\n          />\n      }\n\n    </PokemonDetailWrapper>\n  )\n}\n\nexport default PokemonDetail;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled'\n\nimport PokemonCard from '../components/PokemonCard'\nimport Button from '../components/Button'\n\nimport { MyPokemonContext } from '../Context/MyPokemonContext';\nimport { mq } from '../assets/styling/breakpoints';\nimport { color } from '../constants/style';\n\nconst ContentWrapper = styled.div`\n  .list-wrapper {\n    margin: 0 16px;\n    display: flex;\n    flex-flow: column nowrap;\n    align-content: stretch;\n  }\n\n  .pokemon-card {\n    display: flex;\n  }\n\n  .card-menu {\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-end;\n  }\n\n  .btn-menu {\n    margin-bottom: 14px;\n  }\n\n  ${mq('s')} {\n    .list-wrapper {\n      margin: 0 auto;\n      flex-flow: row wrap;\n      justify-content: space-around;\n    }\n    .card-menu {\n      display: flex;\n      flex-flow: row wrap;\n      justify-content: space-evenly;\n    }\n  }\n`\n\nconst MyPokemon = () => {\n  const [capturedPokemons, setCapturedPokemons] = useContext(MyPokemonContext);\n\n  const releasePokemon = pokemon => {\n    const index = capturedPokemons.indexOf(pokemon)\n        , tempNewArray = [...capturedPokemons]\n    \n    tempNewArray.splice(index, 1)\n\n    localStorage.setItem('capturedPokemons', JSON.stringify(tempNewArray))\n\n    setCapturedPokemons(tempNewArray)\n  }\n  \n  return (\n    <ContentWrapper>\n      <h1 className=\"text-centered\">My Pokemons</h1>\n\n      <div className=\"list-wrapper\">\n        {\n          capturedPokemons.length === 0 &&\n            <div className=\"text-centered\">\n              <h3>You haven't catched any Pokemon (yet)!</h3>\n              <p>\n                {`No worries, just go to the PokeList > select a Pokemon > hit \"Catch\" button`}\n              </p>\n            </div>\n        }\n\n        {capturedPokemons.map((pokemon, index) =>\n          <div key={index}>\n            \n            <PokemonCard pokemon={pokemon}>\n              <div className=\"card-menu\">\n                <div className=\"btn-menu\">\n                  <Link className=\"link-no-decoration\" to={`details/${pokemon.name}`}>\n                    <Button bgColor={color.blue}>\n                      <h4 className=\"text-white my-0\">Detail</h4>\n                    </Button>\n                  </Link>\n                </div>\n                <div className=\"btn-menu\">\n                  <Button bgColor={color.red} callbackFunc={() => releasePokemon(pokemon)}>\n                    <h4 className=\"text-white my-0\">Release</h4>\n                  </Button>\n                </div>\n              </div>\n            </PokemonCard>\n          </div>\n        )}\n      </div>\n      \n    </ContentWrapper>\n  )\n}\n\nexport default MyPokemon;","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n// import { PageNotFound } from './404'\nimport PokemonList from './PokemonList'\nimport PokemonDetail from './PokemonDetail'\nimport MyPokemon from './MyPokemon'\n\n\nexport const router = () => {\n  return (\n    <Switch>\n      <Route path='/' exact component={PokemonList}/>\n      <Route path='/details/:pokemonName' component={PokemonDetail}/>\n      <Route path='/my-pokemon' exact  component={MyPokemon}/>\n    </Switch>\n  )\n}","import './App.css';\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport { PokemonProvider } from './Context/PokemonContext'\nimport { MyPokemonProvider } from './Context/MyPokemonContext'\n\nimport styled from '@emotion/styled'\nimport { Navbar } from './components/Navbar'\nimport { router as Route} from './pages/router'\nimport { mq } from './assets/styling/breakpoints';\n\n\nconst Container = styled.div`\n    width: 100%;\n    padding: 100px 0;\n    margin: 0 auto;\n    aspect-ratio: 100 / 29;\n\n    ${mq('m')} {\n      width: 80%;\n    }\n  `\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n      <Navbar />\n        <PokemonProvider>\n          <MyPokemonProvider>\n          <Container>\n            <Route />\n          </Container>\n          </MyPokemonProvider>\n        </PokemonProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}